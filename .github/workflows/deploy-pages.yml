name: Deploy SPA to Cloudflare Pages

on:
  push:
    branches: [main]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_LEGACY_PEER_DEPS: "true"
      CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CF_TOKEN:      ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CF_PROJECT:    "launchwing-app"   # <— pick once and keep

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install deps (workspaces ok, no lockfile required)
        run: npm install --no-audit --no-fund -ws

      - name: Build SPA → app/dist
        run: npm run -w app build

      # Ensure Pages project exists (create if missing)
      - name: Ensure Pages project exists
        run: |
          set -e
          BASE="https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects"
          # Check
          CODE=$(curl -s -o /tmp/pages_get.json -w "%{http_code}" \
            -H "Authorization: Bearer ${CF_TOKEN}" \
            "${BASE}/${CF_PROJECT}")
          if [ "$CODE" = "404" ]; then
            echo "Creating Pages project: ${CF_PROJECT}"
            curl -fsS -X POST "${BASE}" \
              -H "Authorization: Bearer ${CF_TOKEN}" \
              -H "Content-Type: application/json" \
              --data "{\"name\":\"${CF_PROJECT}\",\"production_branch\":\"main\"}" \
            >/tmp/pages_create.json
            echo "Created:"
            cat /tmp/pages_create.json
          else
            echo "Pages project exists (status ${CODE})"
          fi

      - name: Publish to Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken:  ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.CF_PROJECT }}
          directory: app/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}