name: Deploy Orchestrator to Cloudflare Workers

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      NPM_CONFIG_LEGACY_PEER_DEPS: "true"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install deps
        run: npm install --no-audit --no-fund

      - name: Build SPA → public/
        run: npm run build

      - name: Typecheck
        run: npm run typecheck

      - name: Lint (non-blocking)
        run: npm run lint || true

      # -------- Inject CF token + account id (used by wrangler-action and as runtime fallback) --------
      - name: Set Worker Secrets (token + account)
        env:
          CF_API_TOKEN:   ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ACCOUNT_ID:  ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx --yes wrangler@4.28.1 --version
          if [ -n "${CF_API_TOKEN}" ]; then
            yes | npx wrangler@4.28.1 secret delete CLOUDFLARE_API_TOKEN  --name launchwing-orchestrator || true
            printf "%s" "$CF_API_TOKEN" | npx wrangler@4.28.1 secret put CLOUDFLARE_API_TOKEN --name launchwing-orchestrator
          fi
          if [ -n "${CF_ACCOUNT_ID}" ]; then
            yes | npx wrangler@4.28.1 secret delete CLOUDFLARE_ACCOUNT_ID --name launchwing-orchestrator || true
            printf "%s" "$CF_ACCOUNT_ID" | npx wrangler@4.28.1 secret put CLOUDFLARE_ACCOUNT_ID --name launchwing-orchestrator
          fi

      # -------- Inject CF Global API Key + Email (preferred auth at runtime for Services API) --------
      - name: Set Worker Secrets (global key + email)
        env:
          CF_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
          CF_KEY:   ${{ secrets.CLOUDFLARE_API_KEY }}
        run: |
          npx --yes wrangler@4.28.1 --version
          if [ -n "${CF_EMAIL}" ] && [ -n "${CF_KEY}" ]; then
            yes | npx wrangler@4.28.1 secret delete CLOUDFLARE_EMAIL   --name launchwing-orchestrator || true
            yes | npx wrangler@4.28.1 secret delete CLOUDFLARE_API_KEY --name launchwing-orchestrator || true
            printf "%s" "$CF_EMAIL" | npx wrangler@4.28.1 secret put CLOUDFLARE_EMAIL   --name launchwing-orchestrator
            printf "%s" "$CF_KEY"   | npx wrangler@4.28.1 secret put CLOUDFLARE_API_KEY --name launchwing-orchestrator
          else
            echo "⚠️ CLOUDFLARE_EMAIL or CLOUDFLARE_API_KEY not set; runtime will fall back to API token."
          fi

      # ------------------------------- Deploy ---------------------------------
      - name: Deploy (wrangler)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken:  ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: "4.28.1"
          command: deploy

      # --------------------------- Post-deploy check ---------------------------
      - name: Health check
        env:
          CF_WORKERS_SUBDOMAIN: ${{ vars.CF_WORKERS_SUBDOMAIN }}
        run: |
          SUBDOMAIN="${CF_WORKERS_SUBDOMAIN:-promptpulse}"
          URL="https://launchwing-orchestrator.${SUBDOMAIN}.workers.dev/health"
          echo "Hitting $URL"
          curl -fsS "$URL" | tee /tmp/health.json
          jq -e '.ok == true' /tmp/health.json