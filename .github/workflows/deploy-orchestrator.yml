name: Deploy Orchestrator

on:
  push:
    branches: [ main ]
    paths:
      - "src/**"
      - "package.json"
      - "tsconfig.json"
      - "wrangler.toml"
      - ".github/workflows/deploy-orchestrator.yml"
  workflow_dispatch: {}

concurrency:
  group: orchestrator-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      # Optional override; otherwise mvp.ts defaults to gpt-4.1-mini
      OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install
        run: npm ci
        env:
          NPM_CONFIG_LEGACY_PEER_DEPS: "true"

      - name: Build (if present)
        run: npm run build --if-present

      - name: Wrangler version
        run: npx --yes wrangler@4.28.1 --version

      # --- Required Worker secrets only (PUT-only; no deletes to avoid versions race) ---
      - name: Set Worker secrets
        shell: bash
        run: |
          set -euo pipefail

          if [ -z "${CLOUDFLARE_API_TOKEN:-}" ]; then
            echo "❌ CLOUDFLARE_API_TOKEN GitHub secret is missing"; exit 1
          fi
          if [ -z "${CLOUDFLARE_ACCOUNT_ID:-}" ]; then
            echo "❌ CLOUDFLARE_ACCOUNT_ID GitHub secret is missing"; exit 1
          fi
          if [ -z "${OPENAI_API_KEY:-}" ]; then
            echo "❌ OPENAI_API_KEY GitHub secret is missing"; exit 1
          fi

          printf "%s" "$CLOUDFLARE_API_TOKEN"  | npx wrangler@4.28.1 secret put CLOUDFLARE_API_TOKEN  --name launchwing-orchestrator --quiet
          printf "%s" "$CLOUDFLARE_ACCOUNT_ID" | npx wrangler@4.28.1 secret put CLOUDFLARE_ACCOUNT_ID --name launchwing-orchestrator --quiet
          printf "%s" "$OPENAI_API_KEY"        | npx wrangler@4.28.1 secret put OPENAI_API_KEY        --name launchwing-orchestrator --quiet

          # Optional model override
          if [ -n "${OPENAI_MODEL:-}" ]; then
            printf "%s" "$OPENAI_MODEL" | npx wrangler@4.28.1 secret put OPENAI_MODEL --name launchwing-orchestrator --quiet
          fi

      - name: Deploy Worker
        env:
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          # Use wrangler.toml in repo; --name keeps it explicit
          npx --yes wrangler@4.28.1 deploy --name launchwing-orchestrator --minify

      - name: Verify /health
        run: |
          set -e
          URL="https://launchwing-orchestrator.promptpulse.workers.dev/health"
          echo "Checking $URL ..."
          for i in {1..10}; do
            code=$(curl -sS -o /dev/null -w "%{http_code}" "$URL" || true)
            if [ "$code" = "200" ]; then
              curl -sS "$URL"
              exit 0
            fi
            echo "Health not ready (code=$code). Retry $i/10 ..."
            sleep 3
          done
          echo "❌ Health check failed"
          curl -v "$URL" || true
          exit 1