name: Deploy Orchestrator to Cloudflare Workers

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      NPM_CONFIG_LEGACY_PEER_DEPS: "true"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install deps
        run: npm install --no-audit --no-fund

      - name: Build SPA ‚Üí public/
        run: npm run build

      - name: Typecheck
        run: npm run typecheck

      - name: Lint (non-blocking)
        run: npm run lint

      # ‚¨áÔ∏è Inject Cloudflare secrets into the Worker BEFORE deploy
      - name: Set Worker Secrets (CLOUDFLARE_API_TOKEN, CLOUDFLARE_ACCOUNT_ID)
        env:
          CF_API_TOKEN:    ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ACCOUNT_ID:   ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          # Pipe values into wrangler; pass account-id explicitly
          printf "%s" "$CF_API_TOKEN"  | npx wrangler@4.28.1 secret put CLOUDFLARE_API_TOKEN  --account-id "$CF_ACCOUNT_ID" --quiet
          printf "%s" "$CF_ACCOUNT_ID" | npx wrangler@4.28.1 secret put CLOUDFLARE_ACCOUNT_ID --account-id "$CF_ACCOUNT_ID" --quiet

      # üöÄ Deploy using wrangler-action (also authenticated with the same secrets)
      - name: Deploy (wrangler)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: '4.28.1'
          command: deploy

      - name: Health check
        run: |
          URL="https://launchwing-orchestrator.${{ vars.CF_WORKERS_SUBDOMAIN || 'promptpulse' }}.workers.dev/health"
          echo "Hitting $URL"
          curl -fsS "$URL" | tee /tmp/health.json
          jq -e '.ok == true' /tmp/health.json