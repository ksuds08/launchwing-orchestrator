export function pagesWorkerTs(orchestratorUrl: string) {
  // Cloudflare Pages "Advanced Mode" _worker.ts
  return `// _worker.ts (in generated app repo)
// Serves static assets and proxies /api/* to the shared Orchestrator.
export default {
  async fetch(request, env, ctx) {
    const url = new URL(request.url);
    if (url.pathname.startsWith("/api/") || url.pathname === "/api") {
      // Proxy to orchestrator
      const target = new URL("${orchestratorUrl}");
      target.pathname = url.pathname.replace(/^\\/api/, ""); // e.g. /mvp
      target.search = url.search;
      return fetch(new Request(target.toString(), request));
    }

    // Static assets via Pages runtime
    return env.ASSETS.fetch(request);
  }
} satisfies ExportedHandler<Env>;`;
}

export const readmeMd = (name: string) => `# ${name}

This app was generated by LaunchWing. It deploys to Cloudflare Pages automatically via GitHub Actions.

- Source code: your repo
- Production deploys: push to \`main\`
- API calls: proxied to the shared Orchestrator

## Dev
\`\`\`bash
bun install
bun run dev
\`\`\`

## Build
\`\`\`bash
bun run build
\`\`\`
`;

export const packageJson = (appName: string) =>
  JSON.stringify(
    {
      name: appName,
      private: true,
      scripts: {
        dev: "vite",
        build: "vite build",
        preview: "vite preview"
      },
      devDependencies: {
        vite: "^5.3.4",
        typescript: "^5.5.4",
        "@types/node": "^20.14.10",
        bun: "latest"
      }
    },
    null,
    2
  );