import type { Env } from "../index";
import type { IR } from "@t/ir";
import type { FileManifest } from "@t/manifest";

export async function generateFiles(_ir: IR, manifest: FileManifest, _env: Env): Promise<Record<string, string>> {
  const files: Record<string, string> = {};
  for (const p of manifest.files) {
    if (p === "app/src/pages/index.tsx") {
      files[p] = [
        'import { useState } from "react";',
        "export default function Home(){",
        ' const [msg,setMsg]=useState("hello");',
        " async function send(){ await fetch('/api/echo',{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify({message:msg})}); }",
        ' return (<main><h1>LaunchWing App</h1><input value={msg} onChange={e=>setMsg(e.target.value)} /><button onClick={send}>Echo</button></main>);',
        "}"
      ].join("\n");
    } else if (p === "worker/src/routes/health.ts") {
      files[p] = 'export const onRequest: PagesFunction = async () => new Response(JSON.stringify({ok:true}),{headers:{\"content-type\":\"application/json\"}});';
    } else if (p === "worker/src/routes/echo.ts") {
      files[p] = 'export const onRequestPost: PagesFunction = async ({request}) => { try{ const b=await request.json(); return new Response(JSON.stringify({ok:true,data:b}),{headers:{\"content-type\":\"application/json\"}});}catch{ return new Response(JSON.stringify({ok:false,error:\"Invalid JSON\"}),{status:400,headers:{\"content-type\":\"application/json\"}});} };';
    } else if (p === "README.md") {
      files[p] = "# Generated by LaunchWing\n\nThis app was generated from an IR.";
    } else if (p === "wrangler.toml") {
      files[p] = [
        'name = "generated-app"',
        'main = "worker/src/index.ts"',
        'compatibility_date = "2025-08-10"',
        "",
        "[assets]",
        'directory = "public"',
        'binding = "ASSETS"'
      ].join("\n");
    } else {
      files[p] = "// TODO: generated";
    }
  }
  return files;
}